# Deliverables
# ############
# a `build` workflow that runs always
# a `release` workflow that runs only for #release_commits
# a `hot-fix` workflow that runs only for hot-fix branches

# this should build

version: 2.1

references:
  build_and_deliver_predev_filter: &build_and_deliver_predev_filter
    branches:
      only: /.*/
  default_job_definition: &default_job_definition
    docker:
      - image: cimg/base:2020.10
    steps:
      - run: echo gecko

parameters:
  not_cleared_for_takeoff:
    type: boolean
    default: true
  run_build_tasks:
    type: boolean
    default: false
  run_release_tasks:
    type: boolean
    default: false

workflows:
  version: 2.1
  mission_control:
    when: << pipeline.parameters.not_cleared_for_takeoff >>
    jobs:
      - checkpoint
  
  build_and_deliver_predev-release_tasks:
    when: << pipeline.parameters.run_release_tasks >>
    jobs:
      - check_pr_jira_ticket:
          filters:
            <<: *build_and_deliver_predev_filter
      - test_terraform:
          filters:
            <<: *build_and_deliver_predev_filter
      - test_azure_functions:
          filters:
            <<: *build_and_deliver_predev_filter
      - validate_circleci_config:
          filters:
            tags:
              only:
                - /predev-.*/
      - test_preflight:
          filters:
            <<: *build_and_deliver_predev_filter

  build_and_deliver_predev-build_tasks:
    when: << pipeline.parameters.run_build_tasks >>
    jobs:
      - go_check:
          filters:
            <<: *build_and_deliver_predev_filter
      - go_sec:
          filters:
            <<: *build_and_deliver_predev_filter
      - bazel_integration:
          filters:
            <<: *build_and_deliver_predev_filter
      - go_coverage:
          filters:
            <<: *build_and_deliver_predev_filter
          requires:
            - bazel_integration
      - test_go_e2e:
          filters:
            <<: *build_and_deliver_predev_filter
      - test_cmd_cp-ui:
          filters:
            <<: *build_and_deliver_predev_filter
      - mock_cypress_orb:
          name: "cp-ui functional test setup"
          filters:
            <<: *build_and_deliver_predev_filter
      - cp_ui_functional_test:
          matrix:
            parameters:
              testToRun: ["analytics", "auth", "billing", "clusters", "services"]
          requires:
            - "cp-ui functional test setup"
          filters:
            <<: *build_and_deliver_predev_filter

  hot_fix:
    when: << pipeline.parameters.not_cleared_for_takeoff >>
    jobs:
      - appease_the_gods:
          filters:
            branches:
              only: /hot-fix-.+/

jobs:
  checkpoint:
    docker:
      - image: cimg/base:2020.10
    steps:
      - checkout
      - run:
          name: Release Check
          command: |
            if git log -1 --pretty=%B | grep ".*\#release_commit.*";
            then
              echo "I'm a release commit - Run release tasks"
              curl -u ${CIRCLE_API_TOKEN}: -X POST --header "Content-Type: application/json" -d '{
                "branch": "'"${CIRCLE_BRANCH}"'",
                "parameters": {
                  "run_build_tasks": true,
                  "run_release_tasks": true,
                  "not_cleared_for_takeoff": false
                }
              }' https://circleci.com/api/v2/project/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pipeline
            else
              echo "I'm not a release commit - Run build tasks"
              curl -u ${CIRCLE_API_TOKEN}: -X POST --header "Content-Type: application/json" -d '{
                "branch": "'"${CIRCLE_BRANCH}"'",
                "parameters": {
                  "run_build_tasks": true,
                  "not_cleared_for_takeoff": false
                }
              }' https://circleci.com/api/v2/project/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pipeline
            fi
  cp_ui_functional_test:
    docker:
      - image: cimg/base:2020.10
    parameters:
      testToRun:
        type: string
        default: "*"
    steps:
      - run: echo << parameters.testToRun >>
  check_pr_jira_ticket:
    <<: *default_job_definition
  test_terraform:
    <<: *default_job_definition
  test_azure_functions:
    <<: *default_job_definition
  validate_circleci_config:
    <<: *default_job_definition
  test_preflight:
    <<: *default_job_definition
  go_check:
    <<: *default_job_definition
  go_sec:
    <<: *default_job_definition
  bazel_integration:
    <<: *default_job_definition
  go_coverage:
    <<: *default_job_definition
  test_go_e2e:
    <<: *default_job_definition
  test_cmd_cp-ui:
    <<: *default_job_definition
  mock_cypress_orb:
    <<: *default_job_definition
  appease_the_gods:
    <<: *default_job_definition
